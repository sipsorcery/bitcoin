# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $env:VCPKG_INSTALL_PATH = 'C:\tools\vcpkg\installed'
      $env:PACKAGES = Get-Content -Path build_msvc\vcpkg-packages.txt
            Write-Host "vcpkg list: $env:PACKAGES"
            if(!(Test-Path -Path ($env:VCPKG_INSTALL_PATH))) {
                cd c:\tools
                dir
                git clone https://github.com/microsoft/vcpkg.git
                cd vcpkg
                $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.
                git pull origin master
                .\bootstrap-vcpkg.bat
                Add-Content "C:\tools\vcpkg\triplets\x64-windows-static.cmake" "set(VCPKG_BUILD_TYPE release)"
                .\vcpkg install --triplet x64-windows-static $env:PACKAGES.split()
            }
            else {
              Write-Host "required vcpkg packages already installed."
            }
            c:\tools\vcpkg\vcpkg integrate install

- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'build_msvc\msvc-autogen.py'

- task: VSBuild@1
  inputs:
    solution: 'build_msvc\Bitcoin.sln'
    vsVersion: '16.0'
    platform: 'x64'
    configuration: 'Release'
    maximumCpuCount: true
    msbuildArchitecture: 'x64'
